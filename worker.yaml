#cloud-config

coreos:
  units:
    - name: crio-install.service
      command: start
      content: |
        [Unit]
        Description=CRIO install via rkt
        After=network-online.target
        [Service]
        ExecStart=/usr/bin/rkt run \
          --trust-keys-from-https \
          --volume host,kind=host,source=/ \
          --mount volume=host,target=/host \
          quay.io/rmenn/crio:setup
          --exec=/crio/install.sh
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target
    - name: crio.service
      command: start
      content: |
        [Unit]
        Description=Open Container Initiative Daemon
        Documentation=https://github.com/kubernetes-incubator/cri-o
        After=crio-install.service
        [Service]
        Type=notify
        Environment=GOTRACEBACK=crash
        Environment=LD_LIBRARY_PATH=:/opt/lib64
        Environment=PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/bin
        ExecStart=/opt/bin/crio \
          --runtime /usr/bin/runc \
          --log /home/core/crio.log
          --log-level debug
        ExecReload=/bin/kill -s HUP $MAINPID
        TasksMax=infinity
        LimitNOFILE=1048576
        LimitNPROC=1048576
        LimitCORE=infinity
        OOMScoreAdjust=-999
        TimeoutStartSec=0
        Restart=on-abnormal

        [Install]
        WantedBy=multi-user.target

    - name: kubelet.service
      enable: true
      command: start
      content: |
        [Unit]
        Description=Start bootkube to launch a self-hosted cluster
        Requires=crio.service
        After=crio.service
        [Service]
        EnvironmentFile=/etc/environment
        Environment=KUBELET_IMAGE_URL=docker://k8s.gcr.io/hyperkube
        Environment=KUBELET_IMAGE_TAG=v1.12.1
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \
          --volume etc-resolv,kind=host,source=/etc/resolv.conf \
          --mount volume=etc-resolv,target=/etc/resolv.conf \
          --volume var-lib-cni,kind=host,source=/var/lib/cni \
          --mount volume=var-lib-cni,target=/var/lib/cni \
          --volume var-lib-kubelet,kind=host,source=/var/lib/kubelet \
          --mount volume=var-lib-kubelet,target=/var/lib/kubelet \
          --insecure-options=image"
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/cni/net.d
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/checkpoint-secrets
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/inactive-manifests
        ExecStartPre=/bin/mkdir -p /var/lib/kubelet/pki
        ExecStartPre=/bin/mkdir -p /var/lib/cni
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --kubeconfig=/etc/kubernetes/kubeconfig \
          --client-ca-file=/etc/kubernetes/ca.crt \
          --anonymous-auth=false \
          --cert-dir=/var/lib/kubelet/pki \
          --lock-file=/var/run/lock/kubelet.lock \
          --exit-on-lock-contention \
          --pod-manifest-path=/etc/kubernetes/manifests \
          --allow-privileged \
          --minimum-container-ttl-duration=3m0s \
          --hostname-override=${COREOS_PUBLIC_IPV4} \
          --node-labels=node-role.kubernetes.io/worker \
          --cluster_dns=10.3.0.10 \
          --cluster_domain=cluster.local \
          --rotate-certificates \
          --container-runtime=remote \
          --container-runtime-endpoint=unix:///run/crio/crio.sock \
          --image-service-endpoint=unix:///run/crio/crio.sock \
          --runtime-request-timeout=10m

        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid
        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
